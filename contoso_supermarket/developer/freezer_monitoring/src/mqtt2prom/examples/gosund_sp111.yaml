# Settings for the MQTT Client. Currently only these three are supported
mqtt:
  # The MQTT broker to connect to
  server: tcp://192.168.1.11:1883
  # Optional: Username and Password for authenticating with the MQTT Server
  # user: bob
  # password: happylittleclouds
  # The Topic path to subscribe to. Be aware that you have to specify the wildcard.
  topic_path: tele/+/SENSOR
  # Optional: Regular expression to extract the device ID from the topic path. The default regular expression, assumes
  # that the last "element" of the topic_path is the device id.
  # The regular expression must contain a named capture group with the name deviceid
  # For example the expression for tasamota based sensors is "tele/(?P<deviceid>.*)/.*"
  device_id_regex: "tele/(?P<deviceid>.*)/SENSOR"
  # The MQTT QoS level
  qos: 0
cache:
  # Timeout. Each received metric will be presented for this time if no update is send via MQTT.
  # Set the timeout to -1 to disable the deletion of metrics from the cache. The exporter presents the ingest timestamp
  # to prometheus.
  timeout: 24h
# This is a list of valid metrics. Only metrics listed here will be exported
metrics:
  # The name of the metric in prometheus
  - prom_name: consumed_energy_kilowatthours_total
    mqtt_name: "ENERGY.Total"
    help: "total measured kilowatthours since flash"
    type: counter
  - prom_name: voltage_volts
    mqtt_name: "ENERGY.Voltage"
    help: "Currently measured voltage"
    type: gauge
  - prom_name: current_amperes
    mqtt_name: "ENERGY.Current"
    help: "Currently measured current"
    type: gauge
  - prom_name: power_watts
    mqtt_name: "ENERGY.Power"
    help: "Currently measured power"
    type: gauge
  - prom_name: apparent_power_watt
    mqtt_name: "ENERGY.ApparentPower"
    help: "Currently apparent power"
    type: gauge
  - prom_name: reactive_power_watt
    mqtt_name: "ENERGY.ReactivePower"
    help: "Currently reactive power"
    type: gauge